// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ProjetoIntegrador.Api.Data;

namespace ProjetoIntegrador.Api.Migrations
{
    [DbContext(typeof(BancoContext))]
    [Migration("20210928032401_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("ProjetoIntegrador.Api.Models.Categoria", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Descricao")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.HasIndex("Descricao")
                        .IsUnique();

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("ProjetoIntegrador.Api.Models.Cruzada", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("AutorID")
                        .HasColumnType("integer");

                    b.Property<int?>("CategoriaID")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Criacao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("TamanhoX")
                        .HasColumnType("integer");

                    b.Property<int>("TamanhoY")
                        .HasColumnType("integer");

                    b.HasKey("ID");

                    b.HasIndex("AutorID");

                    b.HasIndex("CategoriaID");

                    b.ToTable("Cruzadas");
                });

            modelBuilder.Entity("ProjetoIntegrador.Api.Models.CruzadaItem", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("CruzadaID")
                        .HasColumnType("integer");

                    b.Property<int>("Orientacao")
                        .HasColumnType("integer");

                    b.Property<int?>("PalavraID")
                        .HasColumnType("integer");

                    b.Property<int>("PosicaoX")
                        .HasColumnType("integer");

                    b.Property<int>("PosicaoY")
                        .HasColumnType("integer");

                    b.HasKey("ID");

                    b.HasIndex("CruzadaID");

                    b.HasIndex("PalavraID");

                    b.ToTable("CruzadaItens");
                });

            modelBuilder.Entity("ProjetoIntegrador.Api.Models.Palavra", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("CategoriaID")
                        .HasColumnType("integer");

                    b.Property<string>("Dica")
                        .HasColumnType("text");

                    b.Property<string>("Valor")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.HasIndex("CategoriaID");

                    b.HasIndex("Valor")
                        .IsUnique();

                    b.ToTable("Palavras");
                });

            modelBuilder.Entity("ProjetoIntegrador.Api.Models.Sessao", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("Acertos")
                        .HasColumnType("integer");

                    b.Property<int?>("CruzadaID")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("Fim")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("Inicio")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("UsuarioID")
                        .HasColumnType("integer");

                    b.HasKey("ID");

                    b.HasIndex("CruzadaID");

                    b.HasIndex("UsuarioID");

                    b.ToTable("Sessoes");
                });

            modelBuilder.Entity("ProjetoIntegrador.Api.Models.Usuario", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .HasColumnType("text");

                    b.Property<int>("Perfil")
                        .HasColumnType("integer");

                    b.Property<string>("Senha")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.HasIndex("Email", "Nome")
                        .IsUnique();

                    b.ToTable("Usuarios");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Usuario");
                });

            modelBuilder.Entity("ProjetoIntegrador.Api.Models.Aluno", b =>
                {
                    b.HasBaseType("ProjetoIntegrador.Api.Models.Usuario");

                    b.Property<int?>("Idade")
                        .HasColumnType("integer");

                    b.Property<int?>("SerieEscolar")
                        .HasColumnType("integer");

                    b.Property<int?>("Sexo")
                        .HasColumnType("integer");

                    b.HasDiscriminator().HasValue("Aluno");
                });

            modelBuilder.Entity("ProjetoIntegrador.Api.Models.Professor", b =>
                {
                    b.HasBaseType("ProjetoIntegrador.Api.Models.Usuario");

                    b.Property<string>("Disciplina")
                        .HasColumnType("text");

                    b.HasDiscriminator().HasValue("Professor");
                });

            modelBuilder.Entity("ProjetoIntegrador.Api.Models.Cruzada", b =>
                {
                    b.HasOne("ProjetoIntegrador.Api.Models.Usuario", "Autor")
                        .WithMany()
                        .HasForeignKey("AutorID");

                    b.HasOne("ProjetoIntegrador.Api.Models.Categoria", "Categoria")
                        .WithMany()
                        .HasForeignKey("CategoriaID");

                    b.Navigation("Autor");

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("ProjetoIntegrador.Api.Models.CruzadaItem", b =>
                {
                    b.HasOne("ProjetoIntegrador.Api.Models.Cruzada", null)
                        .WithMany("Itens")
                        .HasForeignKey("CruzadaID");

                    b.HasOne("ProjetoIntegrador.Api.Models.Palavra", "Palavra")
                        .WithMany()
                        .HasForeignKey("PalavraID");

                    b.Navigation("Palavra");
                });

            modelBuilder.Entity("ProjetoIntegrador.Api.Models.Palavra", b =>
                {
                    b.HasOne("ProjetoIntegrador.Api.Models.Categoria", "Categoria")
                        .WithMany()
                        .HasForeignKey("CategoriaID");

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("ProjetoIntegrador.Api.Models.Sessao", b =>
                {
                    b.HasOne("ProjetoIntegrador.Api.Models.Cruzada", "Cruzada")
                        .WithMany()
                        .HasForeignKey("CruzadaID");

                    b.HasOne("ProjetoIntegrador.Api.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioID");

                    b.Navigation("Cruzada");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ProjetoIntegrador.Api.Models.Cruzada", b =>
                {
                    b.Navigation("Itens");
                });
#pragma warning restore 612, 618
        }
    }
}
